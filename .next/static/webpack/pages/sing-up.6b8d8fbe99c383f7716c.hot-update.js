/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/sing-up",{

/***/ "./src/verifiers/is-valid-password.js":
/*!********************************************!*\
  !*** ./src/verifiers/is-valid-password.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ validatePassword; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n//Keni123men = true\n//Keni123 = false\n//Keni123n = true\n//Kenimenkeni = false\nvar isValidPassword = function isValidPassword(passwordValue) {\n  return Boolean(!passwordValue.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/));\n};\n\nfunction validatePassword(value) {\n  var error;\n\n  if (!value) {\n    error = \"Required\";\n  } else if (isValidPassword(value)) {\n    error = \"Invalid password\";\n  }\n\n  return error;\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3ZlcmlmaWVycy9pcy12YWxpZC1wYXNzd29yZC5qcz8zYWE3Il0sIm5hbWVzIjpbImlzVmFsaWRQYXNzd29yZCIsInBhc3N3b3JkVmFsdWUiLCJCb29sZWFuIiwibWF0Y2giLCJ2YWxpZGF0ZVBhc3N3b3JkIiwidmFsdWUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsYUFBRCxFQUFtQjtBQUMxQyxTQUFPQyxPQUFPLENBQ2IsQ0FBQ0QsYUFBYSxDQUFDRSxLQUFkLENBQW9CLGlEQUFwQixDQURZLENBQWQ7QUFHQSxDQUpEOztBQU1lLFNBQVNDLGdCQUFULENBQTBCQyxLQUExQixFQUFpQztBQUMvQyxNQUFJQyxLQUFKOztBQUVBLE1BQUksQ0FBQ0QsS0FBTCxFQUFZO0FBQ1hDLFNBQUssR0FBRyxVQUFSO0FBQ0EsR0FGRCxNQUVPLElBQUlOLGVBQWUsQ0FBQ0ssS0FBRCxDQUFuQixFQUE0QjtBQUNsQ0MsU0FBSyxHQUFHLGtCQUFSO0FBQ0E7O0FBRUQsU0FBT0EsS0FBUDtBQUNBIiwiZmlsZSI6Ii4vc3JjL3ZlcmlmaWVycy9pcy12YWxpZC1wYXNzd29yZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vS2VuaTEyM21lbiA9IHRydWVcbi8vS2VuaTEyMyA9IGZhbHNlXG4vL0tlbmkxMjNuID0gdHJ1ZVxuLy9LZW5pbWVua2VuaSA9IGZhbHNlXG5cbmNvbnN0IGlzVmFsaWRQYXNzd29yZCA9IChwYXNzd29yZFZhbHVlKSA9PiB7XG5cdHJldHVybiBCb29sZWFuKFxuXHRcdCFwYXNzd29yZFZhbHVlLm1hdGNoKC9eKD89LipcXGQpKD89LipbYS16XSkoPz0uKltBLVpdKVswLTlhLXpBLVpdezgsfSQvKVxuXHQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmFsaWRhdGVQYXNzd29yZCh2YWx1ZSkge1xuXHRsZXQgZXJyb3I7XG5cblx0aWYgKCF2YWx1ZSkge1xuXHRcdGVycm9yID0gXCJSZXF1aXJlZFwiO1xuXHR9IGVsc2UgaWYgKGlzVmFsaWRQYXNzd29yZCh2YWx1ZSkpIHtcblx0XHRlcnJvciA9IFwiSW52YWxpZCBwYXNzd29yZFwiO1xuXHR9XG5cblx0cmV0dXJuIGVycm9yO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/verifiers/is-valid-password.js\n");

/***/ })

});